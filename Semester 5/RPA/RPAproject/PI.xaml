<Activity mc:Ignorable="sap sap2010" x:Class="PI" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="PI_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:moie="clr-namespace:Microsoft.Office.Interop.Excel;assembly=Microsoft.Office.Interop.Excel" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.FlowAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.Text</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics.Telemetry</x:String>
      <x:String>Microsoft.CodeAnalysis.Operations</x:String>
      <x:String>Microsoft.CodeAnalysis.Emit</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic.Syntax</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF.ExtractPDFText</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.DataExtraction</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Models</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Validation</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.Features</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Create a UiPath automation sequence that processes invoices from the specified directory and performs the following tasks:&#xA;&#xA;Iterate through all files in the Invoices folder.&#xA;Extract data from the files using the provided regex patterns.&#xA;Save extracted data into an Excel file (.xlsx) with the following columns:&#xA;SupplierName&#xA;InvoiceNumber&#xA;InvoiceDate&#xA;AmountDue&#xA;AmountPaid&#xA;PaymentStatus (values: &quot;Paid&quot; or &quot;Unpaid&quot;)&#xA;Update file names by appending the PaymentStatus to the original file name.&#xA;Use the invoicePath variable instead of hardcoding the directory path.&#xA;Input Details:&#xA;Directory Path: invoicePath = &quot;C:\faculta\sem5\rpa\RPAproject\Invoices&quot;&#xA;Match and move files to subfolders within Invoices if the file name contains the name of a subfolder.&#xA;Use the code given!! with Invoke code&#xA;Data Extraction Helper Code:&#xA;Use the following regex patterns to extract data from the invoice files (assume pdfText contains the text extracted from a file):&#xA;Dim supplierName As String = String.Empty&#xA;Dim invoiceNumber As String = String.Empty&#xA;Dim invoiceDate As String = String.Empty&#xA;Dim amountDue As String = String.Empty&#xA;Dim amountPaid As String = String.Empty&#xA;Dim paymentStatus As String = String.Empty&#xA;&#xA;' Define Regex patterns for required data&#xA;Dim supplierNamePattern As String = &quot;Supplier Name:\s*([A-Za-z\s]+)&quot;&#xA;Dim invoiceNumberPattern As String = &quot;Invoice Number:\s*([\w\-]+)&quot;&#xA;Dim invoiceDatePattern As String = &quot;Invoice Date:\s*([\d]{2}/[\d]{2}/[\d]{4})&quot;&#xA;Dim amountDuePattern As String = &quot;Total Amount:\s*([\d,\.]+)&quot;&#xA;Dim amountPaidPattern As String = &quot;Amount Paid:\s*([\d,\.]+)&quot;&#xA;Dim paymentStatusPattern As String = &quot;Payment Status:\s*(\w+)&quot;&#xA;&#xA;' Apply Regex to extract data from the PDF text (pdfText)&#xA;Dim supplierNameMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, supplierNamePattern)&#xA;Dim invoiceNumberMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, invoiceNumberPattern)&#xA;Dim invoiceDateMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, invoiceDatePattern)&#xA;Dim amountDueMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, amountDuePattern)&#xA;Dim amountPaidMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, amountPaidPattern)&#xA;Dim paymentStatusMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, paymentStatusPattern)&#xA;&#xA;' Extract and assign the data if matches are found&#xA;If supplierNameMatch.Success Then&#xA;    supplierName = supplierNameMatch.Groups(1).Value.Trim()&#xA;End If&#xA;&#xA;If invoiceNumberMatch.Success Then&#xA;    invoiceNumber = invoiceNumberMatch.Groups(1).Value.Trim()&#xA;End If&#xA;&#xA;If invoiceDateMatch.Success Then&#xA;    invoiceDate = invoiceDateMatch.Groups(1).Value.Trim()&#xA;End If&#xA;&#xA;If amountDueMatch.Success Then&#xA;    amountDue = amountDueMatch.Groups(1).Value.Trim()&#xA;End If&#xA;&#xA;If amountPaidMatch.Success Then&#xA;    amountPaid = amountPaidMatch.Groups(1).Value.Trim()&#xA;End If&#xA;&#xA;If paymentStatusMatch.Success Then&#xA;    paymentStatus = paymentStatusMatch.Groups(1).Value.Trim()&#xA;End If" DisplayName="PI" sap:VirtualizedContainerService.HintSize="1715,1949.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pdfText" />
      <Variable x:TypeArguments="x:String" Name="invoicePath" />
      <Variable x:TypeArguments="uisad:IDocumentData(uisad:ExtendedExtractionResultsForDocumentData)" Name="extractionResults" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ForEachFileX DisplayName="ProcessInvoices" Filter="*.pdf" Folder="[invoicePath]" sap:VirtualizedContainerService.HintSize="554,1854.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachFileX_4" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="520,1562" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="invoiceTablePath">
                <Variable.Default>
                  <Literal x:TypeArguments="x:String">C:\faculta\sem5\rpa\RPAproject\invoiceTable.xlsx</Literal>
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="x:String" Name="paymentStatus" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile File="{x:Null}" Content="[pdfText]" DisplayName="Read Text File" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="486,114" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Declare Regex patterns&#xD;&#xA;Dim supplierNamePattern As String = &quot;Supplier Name:\s*([A-Za-z\s]+)&quot;&#xD;&#xA;Dim invoiceNumberPattern As String = &quot;Invoice Number:\s*([\w\-]+)&quot;&#xD;&#xA;Dim invoiceDatePattern As String = &quot;Invoice Date:\s*([\d]{2}/[\d]{2}/[\d]{4})&quot;&#xD;&#xA;Dim amountDuePattern As String = &quot;Total Amount:\s*([\d,\.]+)&quot;&#xD;&#xA;Dim amountPaidPattern As String = &quot;Amount Paid:\s*([\d,\.]+)&quot;&#xD;&#xA;Dim paymentStatusPattern As String = &quot;Payment Status:\s*(\w+)&quot;&#xD;&#xA;&#xD;&#xA;' Declare and initialize the DataTable&#xD;&#xA;Dim invoiceDataTable As New DataTable&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;SupplierName&quot;)&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;InvoiceNumber&quot;)&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;InvoiceDate&quot;)&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;AmountDue&quot;)&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;AmountPaid&quot;)&#xD;&#xA;invoiceDataTable.Columns.Add(&quot;PaymentStatus&quot;)&#xD;&#xA;&#xD;&#xA;' Match patterns against input text (example: pdfText is the extracted text)&#xD;&#xA;Dim supplierNameMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, supplierNamePattern)&#xD;&#xA;Dim invoiceNumberMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, invoiceNumberPattern)&#xD;&#xA;Dim invoiceDateMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, invoiceDatePattern)&#xD;&#xA;Dim amountDueMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, amountDuePattern)&#xD;&#xA;Dim amountPaidMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, amountPaidPattern)&#xD;&#xA;Dim paymentStatusMatch As System.Text.RegularExpressions.Match = System.Text.RegularExpressions.Regex.Match(pdfText, paymentStatusPattern)&#xD;&#xA;&#xD;&#xA;' Assign matches to variables&#xD;&#xA;Dim supplierName As String = If(supplierNameMatch.Success, supplierNameMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;Dim invoiceNumber As String = If(invoiceNumberMatch.Success, invoiceNumberMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;Dim invoiceDate As String = If(invoiceDateMatch.Success, invoiceDateMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;Dim amountDue As String = If(amountDueMatch.Success, amountDueMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;Dim amountPaid As String = If(amountPaidMatch.Success, amountPaidMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;Dim paymentStatus As String = If(paymentStatusMatch.Success, paymentStatusMatch.Groups(1).Value.Trim(), &quot;&quot;)&#xD;&#xA;&#xD;&#xA;' Add extracted data to DataTable&#xD;&#xA;Dim newRow As DataRow = invoiceDataTable.NewRow()&#xD;&#xA;newRow(&quot;SupplierName&quot;) = supplierName&#xD;&#xA;newRow(&quot;InvoiceNumber&quot;) = invoiceNumber&#xD;&#xA;newRow(&quot;InvoiceDate&quot;) = invoiceDate&#xD;&#xA;newRow(&quot;AmountDue&quot;) = amountDue&#xD;&#xA;newRow(&quot;AmountPaid&quot;) = amountPaid&#xD;&#xA;newRow(&quot;PaymentStatus&quot;) = paymentStatus&#xD;&#xA;invoiceDataTable.Rows.Add(newRow)&#xD;&#xA;" DisplayName="Invoke code to extract data using regex patterns" sap:VirtualizedContainerService.HintSize="486,197.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="pdfText">
                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="pdfText" />
                </InArgument>
                <OutArgument x:TypeArguments="moie:DataTable" x:Key="invoiceDataTable">
                  <VisualBasicReference x:TypeArguments="moie:DataTable" ExpressionText="invoiceDataTable" />
                </OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <ui:WriteRange WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[InvoiceDataTable]" DisplayName="Write data to invoiceTable.xlsx in sheet PaymentDetails" sap:VirtualizedContainerService.HintSize="486,148" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="PaymentDetails" StartingCell="A1" WorkbookPath="[invoiceTablePath]" />
            <ui:RenameFileX DisplayName="Rename file by appending paymentStatus" FilePath="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="486,180" sap2010:WorkflowViewState.IdRef="RenameFileX_4" KeepExtension="True" NewName="[String.Concat(CurrentFile.Name, &quot; &quot;, paymentStatus)]" />
            <ui:ForEachFolderX DisplayName="For Each Folder in Folder" Folder="[invoicePath]" sap:VirtualizedContainerService.HintSize="486,862.6666666666666" sap2010:WorkflowViewState.IdRef="ForEachFolderX_2" IncludeSubFolders="False" OrderBy="NameAscFirst" SkipFoldersWithoutPermission="False">
              <ui:ForEachFolderX.Body>
                <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="CurrentFolder" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence sap2010:Annotation.AnnotationText="if the the curent file's name contains the name of the current folder, then move the file there" DisplayName="Do" sap:VirtualizedContainerService.HintSize="452,570" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[CurrentFile.Name.ToLower().Contains(CurrentFolder.Name.ToLower())]" DisplayName="If current file name contains current folder name" sap:VirtualizedContainerService.HintSize="418,464.6666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,244" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[CurrentFolder.FullName]" DisplayName="Move file to current folder" sap:VirtualizedContainerService.HintSize="382,184" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="True" Path="[CurrentFile.FullName]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,90" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFolderX.Body>
            </ui:ForEachFolderX>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
  </Sequence>
</Activity>