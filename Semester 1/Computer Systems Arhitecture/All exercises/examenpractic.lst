     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fprintf,fclose,printf,scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll   
     9                                  import fopen msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import printf msvcrt.dll    
    13                                  import scanf msvcrt.dll 
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 00                          text db "",0
    18 00000001 6578616D656E2E7478-         file_name db "examen.txt", 0
    18 0000000A 7400               
    19 0000000C 737472696E673D00            message_string db "string=",0
    20 00000014 257300                      format db "%s",0
    21 00000017 FFFFFFFF                    file_descriptor dd -1
    22 0000001B 7700                        access_mode db "w", 0
    23 0000001D 00                          text2 db "",0
    24                                      len equ 100
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ;Read a 100 characters string from the keyboard. The string contains a hidden message.
    30                                          ;The message was hidden by reversing the order of the letters and turning each letter in its ASCII code (in base 16).
    31                                          ;Write in a file the original message in a file. The original message does not contain spaces or digits.
    32                                          ;opening the file
    33 00000000 68[1B000000]                    push dword access_mode     
    34 00000005 68[01000000]                    push dword file_name
    35 0000000A FF15[00000000]                  call [fopen]
    36 00000010 83C408                          add esp, 4*2
    37 00000013 A3[17000000]                    mov [file_descriptor],eax
    38 00000018 83F800                          cmp eax,0
    39 0000001B 7455                            je final
    40                                          
    41 0000001D 68[0C000000]                    push dword message_string
    42 00000022 FF15[00000000]                  call[printf]
    43 00000028 83C404                          add esp,4  
    44                                          ;reading from the console the text
    45 0000002B 68[00000000]                    push dword text
    46 00000030 68[14000000]                    push dword format
    47 00000035 FF15[00000000]                  call[scanf]
    48 0000003B 83C408                          add esp,4 * 2
    49                                          
    50 0000003E BE64000000                      mov esi,len
    51 00000043 8B0D64000000                    mov ecx,[len]
    52 00000049 BF00000000                      mov edi,0
    53                                          repeta:
    54 0000004E 8A9E[00000000]                      mov bl,[text+esi]
    55 00000054 889F[1D000000]                      mov [text2+edi],bl
    56 0000005A 4E                                  dec esi
    57 0000005B 47                                  inc edi
    58 0000005C E2F0                            loop repeta
    59                                          ;printing the string in the file
    60 0000005E 68[1D000000]                    push dword text2
    61 00000063 FF35[17000000]                  push dword [file_descriptor]
    62 00000069 FF15[00000000]                  call [fprintf]
    63 0000006F 83C408                          add esp, 4*2
    64                                          final:
    65                                          ;closing the file
    66 00000072 FF35[17000000]                  push dword [file_descriptor]
    67 00000078 FF15[00000000]                  call [fclose]
    68 0000007E 83C404                          add esp, 4
    69                                          ; exit(0)
    70 00000081 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    71 00000083 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    72                                  
