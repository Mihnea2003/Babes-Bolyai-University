     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                  
    14 00000000 010306020307            s1 db 1, 3, 6, 2, 3, 7   
    15                                  l equ $-s1   
    16 00000006 060308010205            s2 db 6, 3, 8, 1, 2, 5
    17 0000000C 00<rept>                d times l db 0  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B906000000                      mov ecx, l   
    22 00000005 BE00000000                      mov esi, 0   
    23 0000000A E322                            jecxz sfarsit   
    24                                          repeta:   
    25 0000000C 8A86[00000000]                      mov al, [s1+esi]  
    26 00000012 8A9E[06000000]                      mov bl, [s2+esi]  
    27 00000018 38D8                                cmp al, bl  
    28 0000001A 7E09                                jle element_in_second_array  
    29                                              element_in_first_array:
    30 0000001C 8886[0C000000]                          mov [d+esi], al  
    31 00000022 46                                      inc esi   
    32 00000023 EB07                                    jmp sfarsit_element_in_first_array   
    33                                              element_in_second_array:  
    34 00000025 889E[0C000000]                          mov [d+esi], bl   
    35 0000002B 46                                      inc esi   
    36                                              sfarsit_element_in_first_array:
    37 0000002C E2DE                            loop repeta  
    38                                          sfarsit:  
    39                                          
    40 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
